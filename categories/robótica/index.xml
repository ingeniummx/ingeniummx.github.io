<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Robótica on Ingenium MX</title><link>https://ingeniummx.github.io/categories/rob%C3%B3tica/</link><description>Recent content in Robótica on Ingenium MX</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Sat, 16 Mar 2024 18:30:00 +0200</lastBuildDate><atom:link href="https://ingeniummx.github.io/categories/rob%C3%B3tica/index.xml" rel="self" type="application/rss+xml"/><item><title>Instalar micro-ROS en la Pico</title><link>https://ingeniummx.github.io/posts/microcontroladores/instalar-micro-ros-en-la-pico/</link><pubDate>Sat, 16 Mar 2024 18:30:00 +0200</pubDate><guid>https://ingeniummx.github.io/posts/microcontroladores/instalar-micro-ros-en-la-pico/</guid><description>&lt;p&gt;&lt;strong&gt;micro-ROS&lt;/strong&gt; lleva ROS 2 a microcontroladores con recursos limitados. A continuación se describe cómo configurar el build system para la Raspberry Pi Pico utilizando el Pico SDK oficial.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id="prerrequisitos"&gt;Prerrequisitos&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Toolchain Arm (&lt;code&gt;arm-none-eabi-gcc&lt;/code&gt;), CMake y Ninja.&lt;/li&gt;
&lt;li&gt;ROS 2 Humble (o posterior) instalado en tu sistema.&lt;/li&gt;
&lt;li&gt;Repositorio &lt;code&gt;micro_ros_setup&lt;/code&gt; clonado en el workspace de ROS 2.&lt;/li&gt;
&lt;li&gt;Pico SDK inicializado (&lt;code&gt;PICO_SDK_PATH&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id="configurar-el-workspace"&gt;Configurar el workspace&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;source /opt/ros/humble/setup.bash
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;mkdir -p ~/micro_ros_ws/src
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;cd ~/micro_ros_ws/src
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;git clone https://github.com/micro-ROS/micro_ros_setup.git
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;cd ..
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;colcon build
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;source install/local_setup.bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id="crear-firmware-para-la-pico"&gt;Crear firmware para la Pico&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Importa los repositorios necesarios&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;ros2 run micro_ros_setup create_firmware_ws.sh freertos raspberripi_pico
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start="2"&gt;
&lt;li&gt;&lt;strong&gt;Descarga dependencias&lt;/strong&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;ros2 run micro_ros_setup configure_firmware.sh freertos raspberripi_pico
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start="3"&gt;
&lt;li&gt;&lt;strong&gt;Compila&lt;/strong&gt; con opciones personalizadas (Wi-Fi deshabilitada por defecto):&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;ros2 run micro_ros_setup build_firmware.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start="4"&gt;
&lt;li&gt;El resultado (&lt;code&gt;firmware.uf2&lt;/code&gt;) se genera en &lt;code&gt;firmware/build&lt;/code&gt;. Cópialo a la Pico en modo BOOTSEL.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id="ejemplo-nodo-ping"&gt;Ejemplo: nodo ping&lt;/h2&gt;
&lt;p&gt;Tras flashear, conecta la Pico por USB y ejecuta en el host:&lt;/p&gt;</description></item><item><title>Lidar</title><link>https://ingeniummx.github.io/posts/sensores/lidar/</link><pubDate>Sat, 16 Mar 2024 15:30:00 +0200</pubDate><guid>https://ingeniummx.github.io/posts/sensores/lidar/</guid><description>&lt;p&gt;Los sistemas &lt;strong&gt;Lidar (Light Detection and Ranging)&lt;/strong&gt; miden distancias con láser y generan mapas de alta resolución. Son esenciales en SLAM, vehículos autónomos e inspección industrial.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id="tecnologías-principales"&gt;Tecnologías principales&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Lidar rotativo 2D:&lt;/strong&gt; un láser gira 360° en un plano horizontal. Ejemplos: RPLidar A2, Hokuyo UST.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lidar rotativo 3D:&lt;/strong&gt; varias líneas láser (Velodyne, Ouster) o inclinación mecánica para generar nubes 3D.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Solid-state (MEMS, flash, FMCW):&lt;/strong&gt; sin partes móviles, menor tamaño y costo creciente en automoción.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Time-of-Flight directo vs FMCW:&lt;/strong&gt; ToF mide tiempo, FMCW mide frecuencia y obtiene velocidad relativa.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id="parámetros-clave"&gt;Parámetros clave&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Alcance:&lt;/strong&gt; distancia máxima efectiva para objetos con reflectividad estándar.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Frecuencia de escaneo:&lt;/strong&gt; Hz o RPM; determina cuántos datos por segundo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Resolución angular:&lt;/strong&gt; separación entre mediciones; influye en densidad de nube.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Campo de visión (FoV):&lt;/strong&gt; horizontal y vertical.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Precisión y repetibilidad:&lt;/strong&gt; error absoluto y ruido entre mediciones.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Clase láser:&lt;/strong&gt; seguridad ocular (Clase 1 preferida para interiores).&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id="comparativa-rápida"&gt;Comparativa rápida&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Modelo&lt;/th&gt;
&lt;th&gt;Tipo&lt;/th&gt;
&lt;th&gt;Alcance&lt;/th&gt;
&lt;th&gt;Frecuencia&lt;/th&gt;
&lt;th&gt;Nota destacada&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;RPLidar A1&lt;/td&gt;
&lt;td&gt;2D&lt;/td&gt;
&lt;td&gt;12 m&lt;/td&gt;
&lt;td&gt;5–10 Hz&lt;/td&gt;
&lt;td&gt;Económico para hobby, sin protección polvo.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Slamtec S1&lt;/td&gt;
&lt;td&gt;2D&lt;/td&gt;
&lt;td&gt;40 m&lt;/td&gt;
&lt;td&gt;10–20 Hz&lt;/td&gt;
&lt;td&gt;IP65, lidar doble motor.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hokuyo UST-10LX&lt;/td&gt;
&lt;td&gt;2D&lt;/td&gt;
&lt;td&gt;10 m&lt;/td&gt;
&lt;td&gt;40 Hz&lt;/td&gt;
&lt;td&gt;Industrial, interfaz Ethernet.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ouster OS1&lt;/td&gt;
&lt;td&gt;3D solid-state&lt;/td&gt;
&lt;td&gt;120 m&lt;/td&gt;
&lt;td&gt;10–20 Hz&lt;/td&gt;
&lt;td&gt;Alta densidad, APIs ROS listas.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Livox MID-360&lt;/td&gt;
&lt;td&gt;3D no rotativo&lt;/td&gt;
&lt;td&gt;70 m&lt;/td&gt;
&lt;td&gt;20 Hz&lt;/td&gt;
&lt;td&gt;Escaneo no repetitivo con fusión temporal.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id="integración-en-robots"&gt;Integración en robots&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Montaje rígido&lt;/strong&gt; y calibración de transformaciones TF para ROS/ROS 2.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sincronización temporal&lt;/strong&gt; con IMU o cámaras para SLAM preciso.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Filtrado de ruido&lt;/strong&gt; (VoxelGrid, StatisticalOutlierRemoval) antes de alimentar algoritmos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gestión de energía&lt;/strong&gt;: algunos modelos consumen &amp;gt;10 W, planifica la fuente.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id="buenas-prácticas"&gt;Buenas prácticas&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Mantén &lt;strong&gt;superficies limpias&lt;/strong&gt;; polvo o insectos generan falsos positivos.&lt;/li&gt;
&lt;li&gt;Usa &lt;strong&gt;zonas de exclusión&lt;/strong&gt; en software para ignorar partes del robot.&lt;/li&gt;
&lt;li&gt;Configura &lt;strong&gt;firmware y drivers oficiales&lt;/strong&gt; para aprovechar actualizaciones de calibración.&lt;/li&gt;
&lt;li&gt;Considera &lt;strong&gt;climatización&lt;/strong&gt; si operas en exterior (calentadores, deshumidificadores).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Con estos criterios podrás elegir e integrar un Lidar acorde a tus necesidades de navegación y percepción.&lt;/p&gt;</description></item><item><title>Sensores ultrasónicos</title><link>https://ingeniummx.github.io/posts/sensores/sensores-ultras%C3%B3nicos/</link><pubDate>Sat, 16 Mar 2024 15:00:00 +0200</pubDate><guid>https://ingeniummx.github.io/posts/sensores/sensores-ultras%C3%B3nicos/</guid><description>&lt;p&gt;Los &lt;strong&gt;sensores ultrasónicos&lt;/strong&gt; miden distancia calculando el tiempo que tarda un pulso acústico en viajar y regresar desde un obstáculo. Son económicos y útiles en robótica móvil, medición de nivel y domótica.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id="componentes-clave"&gt;Componentes clave&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Transductor emisor/receptor&lt;/strong&gt; piezoeléctrico (~40 kHz).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Driver&lt;/strong&gt; que genera burst de alta tensión (80–120 Vpp en modelos industriales).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Detector de eco&lt;/strong&gt; con amplificación logarítmica.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Controlador&lt;/strong&gt; que mide el tiempo de vuelo (ToF) y entrega una lectura digital o analógica.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La distancia se calcula como:&lt;/p&gt;</description></item><item><title>Herramientas indispensables para ROS 2</title><link>https://ingeniummx.github.io/posts/robotica/herramientas-indispensables-para-ros-2/</link><pubDate>Sat, 16 Mar 2024 12:00:00 +0200</pubDate><guid>https://ingeniummx.github.io/posts/robotica/herramientas-indispensables-para-ros-2/</guid><description>&lt;p&gt;ROS 2 ofrece múltiples utilidades para monitorear tópicos, analizar logs y depurar sistemas distribuidos. Conocer las herramientas correctas acelera el desarrollo y evita perder horas persiguiendo bugs.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id="línea-de-comandos"&gt;Línea de comandos&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;ros2 topic&lt;/code&gt;&lt;/strong&gt;: inspecciona publicadores, suscriptores y contenido en tiempo real (&lt;code&gt;ros2 topic echo&lt;/code&gt;, &lt;code&gt;ros2 topic hz&lt;/code&gt;). Útil para validar tipos de mensajes y latencias.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;ros2 node&lt;/code&gt;&lt;/strong&gt;: lista nodos activos, interfaces y parámetros expuestos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;ros2 param&lt;/code&gt;&lt;/strong&gt;: permite leer/escribir parámetros dinámicos, ideal para ajustar PIDs o constantes sin recompilar.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;ros2 bag&lt;/code&gt;&lt;/strong&gt;: registra y reproduce mensajes DDS para depuración offline o análisis de regresiones.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id="visualización-3d-con-rviz"&gt;Visualización 3D con RViz&lt;/h2&gt;
&lt;p&gt;RViz es la navaja suiza para visualizar mapas, nubes de puntos y frames TF.&lt;/p&gt;</description></item></channel></rss>